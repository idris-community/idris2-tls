package tls

version = 0.0.1

authors = "tensorknower69, octeep"

readme = "README.md"

homepage   = "https://github.com/octeep/idris2-tls"
sourceloc  = "https://github.com/octeep/idris2-tls.git"
bugtracker = "https://github.com/octeep/idris2-tls/issues"

license = "ISC (refer to LICENSE file)"
brief = "A portable idris2 implementation of TLS"

depends = base      >= 0.6.0
        , contrib   >= 0.6.0
        , network   >= 0.6.0
        , sop       >= 0.6.0
        , elab-util >= 0.6.0

modules = Crypto.RSA,
          Crypto.ChaCha,
          Crypto.Curve,
          Crypto.Curve.Weierstrass,
          Crypto.Curve.XCurves,
          Crypto.ECDH,
          Crypto.Random,
          Crypto.Hash,
          Crypto.Hash.Interfaces,
          Crypto.Hash.SHA2,
          Crypto.Hash.OID,
          Crypto.Hash.SHA1,
          Crypto.Hash.MerkleDamgard,
          Crypto.Hash.MD5,
          Crypto.Hash.HMAC,
          Crypto.Hash.GHash,
          Crypto.Hash.Poly1305,
          Crypto.AES.Big,
          Crypto.AES.Small,
          Crypto.AES.Common,
          Crypto.Random.C,
          Crypto.Random.JS,
          Network.TLS,
          Network.TLS.Core,
          Network.TLS.Handshake,
          Network.TLS.HelloExtension,
          Network.TLS.Magic,
          Network.TLS.Parsing,
          Network.TLS.Record,
          Network.TLS.Wrapper,
          Network.TLS.HKDF,
          Network.TLS.Handle,
          Network.TLS.AEAD,
          Network.TLS.Parse.DER,
          Network.TLS.Parse.PEM,
          Network.TLS.Signature,
          Network.TLS.Certificate,
          Network.TLS.Certificate.System,
          Network.TLS.Verify,
          Utils.Base64,
          Utils.Bytes,
          Utils.Misc,
          Utils.Handle,
          Utils.Parser,
          Utils.Num,
          Utils.Show,
          Utils.Handle.C,
          Utils.Time,
          Utils.IPAddr,
          Utils.ConstantTable

opts = "-Wno-shadowing"
sourcedir = "src"
